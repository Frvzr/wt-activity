"""change version to revision in retdress kit consist table

Revision ID: 32ef206bf417
Revises: d8da2e1efb26
Create Date: 2025-02-16 19:11:56.952992

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '32ef206bf417'
down_revision: Union[str, None] = 'd8da2e1efb26'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(None, 'asset', ['id'])
    op.create_unique_constraint(None, 'category', ['id'])
    op.create_unique_constraint(None, 'equipment', ['id'])
    op.create_unique_constraint(None, 'item', ['id'])
    op.create_unique_constraint(None, 'location', ['id'])
    op.create_unique_constraint(None, 'part', ['id'])
    op.create_unique_constraint(None, 'redress_kit', ['id'])
    op.add_column('redress_kit_consist', sa.Column('revision', sa.Float(), nullable=False, comment='Версия набора ЗИП'))
    op.drop_column('redress_kit_consist', 'version')
    op.create_unique_constraint(None, 'service_level', ['id'])
    op.create_unique_constraint(None, 'size', ['id'])
    op.create_unique_constraint(None, 'tool', ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'tool', type_='unique')
    op.drop_constraint(None, 'size', type_='unique')
    op.drop_constraint(None, 'service_level', type_='unique')
    op.add_column('redress_kit_consist', sa.Column('version', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False, comment='Версия набора ЗИП'))
    op.drop_column('redress_kit_consist', 'revision')
    op.drop_constraint(None, 'redress_kit', type_='unique')
    op.drop_constraint(None, 'part', type_='unique')
    op.drop_constraint(None, 'location', type_='unique')
    op.drop_constraint(None, 'item', type_='unique')
    op.drop_constraint(None, 'equipment', type_='unique')
    op.drop_constraint(None, 'category', type_='unique')
    op.drop_constraint(None, 'asset', type_='unique')
    # ### end Alembic commands ###
